{
  
    
        "post0": {
            "title": "O som do √°tomo de hidrog√™nio",
            "content": "Inspirado pelo v√≠deo do minute physics decidi fazer esse mini projeto para mostrar como fazer projetos envolvendo faixas de som aud√≠veis no pr√≥prio navegador, totalmente em python atrav√©s do Jupyter Notebook. . Para isso, vamos usar o espectro do √°tomo de hidrog√™nio, e vamos fazer um shift linear nele para dentro do espectro aud√≠vel de frequ√™ncias sonoras. O nome dado a esse processo √© sonifica√ß√£o, voc√™ pode usar o link para saber mais caso se interesse. . %matplotlib inline . from __future__ import division, print_function, absolute_import import scipy.constants as const import numpy as np import scipy from matplotlib.pyplot import plot from scipy.io import wavfile from IPython.core.display import HTML, display . try: from IPython.display import Audio def wavPlayer(data, rate): display(Audio(data, rate=rate)) except ImportError: pass . from numpy import sin, pi rate = 44100 # freq = 44.1 khz duration = 3 # dura√ß√£o do audio # fun√ß√£o para normalizar o seno na amplitude certa para um arquivo wav normedsin = lambda f,t : 2**13*sin(2*pi*f*t) time = np.linspace(0,duration, num=rate*duration) . Primeiro teste para o wav Player . Para come√ßar, vamos come√ßar tocando algo em 440 Hz . import numpy import struct import warnings . la = lambda t : normedsin(440,t) # plot r√°pido da onda nos primeiros 25 ms plot(time[0:1000], la(time)[0:1000]) ampl = la(time).astype(np.int16) # fun√ß√£o que salva o √°udio e toca ele em HTML5 wavPlayer(ampl, rate) . Your browser does not support the audio element. As diferentes frequ√™ncias emitidas por um √°tomo de hidrog√™nio s√£o analiticamente calculadas atrav√©s da formula de Rydberg: . $$ frac{1}{ lambda} = R left( frac{1}{n_1} - frac{1}{n_2} right) $$ . Como sabemos, essa rela√ß√£o tem um formato muito similar a das freq√™ncias emitidas do hidrog√™nio . $$ f_{n,m} = frac{c}{ lambda} = frac{R_h}{h} left( frac{1}{n} - frac{1}{m} right) $$ . Para o caso de $n = 1$ reconhecemos a famosa s√©rie de Lyman, e para $n = 2$ a s√©rie de Balmer . f0 = const.Rydberg*const.c print(&quot;A maior frequ√™ncia do hidrog√™nio √© &quot;,f0,&quot;Hz. e corresponde a n = 1, m = ‚àû&quot;) fshift = 440 print(&quot;todavia odemos shiftar o espectro para 440 Hz (A)&quot;) . A maior frequ√™ncia do hidrog√™nio √© 3289841960250880.5 Hz. e corresponde a n = 1, m = ‚àû todavia odemos shiftar o espectro para 440 Hz (A) . ryd = lambda n,m : fshift*(1/(n**2) -1/(m**2)) flyman = lambda x : ryd(1,x) fbalmer = lambda x : ryd(2,x) . ser = lambda t : sum( [normedsin(flyman(i),t)+normedsin(fbalmer(i+1),t) for i in range(2,8)]) # e uma fun√ß√£o em forma de vetor para realizar opera√ß√µes em cada um dos seus elementos serv = scipy.vectorize(ser) . ss= serv(time) . plot(time, ss) ss = 2**15*ss/ss.max() . wavPlayer(ss.astype(np.int16),rate) . Your browser does not support the audio element.",
            "url": "https://resteche.github.io/REsteche_blog/estrutura%20da%20mat%C3%A9ria/f%C3%ADsica%20moderna/f%C3%ADsica%20atomica/musica/2021/06/10/Som_hidrog%C3%AAnio.html",
            "relUrl": "/estrutura%20da%20mat%C3%A9ria/f%C3%ADsica%20moderna/f%C3%ADsica%20atomica/musica/2021/06/10/Som_hidrog%C3%AAnio.html",
            "date": " ‚Ä¢ Jun 10, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hello again üëã, . In case you want to know more about my recent work, you can check my github here . I promiss I‚Äôll do my best to keep it updated! . Remember you can contact me through my institutional or professional email anytime for doubts or sugestions. . Make sure you check out everything that interests you on my site again! I hope you like my content. .",
          "url": "https://resteche.github.io/REsteche_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "https://resteche.github.io/REsteche_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}